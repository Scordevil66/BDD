/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.app.bdd.form;

import com.app.bdd.controller.MovimientoController;
import com.app.bdd.models.Movimientos;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ce
 */
public class FiltrosMonetarios extends javax.swing.JInternalFrame {

    /**
     * Creates new form FiltrosMonetarios
     */
    public FiltrosMonetarios() {
        initComponents();

        init();
        /*Maximise ventana*/
    }

    public void init() {
        try {
            NumTarj.setBackground(new java.awt.Color(238, 235, 235));
            Bin.setBackground(new java.awt.Color(238, 235, 235));
            FechFi.setBackground(new java.awt.Color(238, 235, 235));
            FechIni.setBackground(new java.awt.Color(238, 235, 235));
            Nit.setBackground(new java.awt.Color(238, 235, 235));
            SubTipo.setBackground(new java.awt.Color(238, 235, 235));

            List<Movimientos> entidades = new ArrayList<>();

            MovimientoController movimientoController = new MovimientoController();

            entidades = MovimientoController.consultaEntidades();

            entity.addItem("Seleccione");

            for (int i = 0; i < entidades.size(); i++) {
                entity.addItem(entidades.get(i).getCodBin() + " - " + entidades.get(i).getNombreBanco());
            }

        } catch (SQLException ex) {
            Logger.getLogger(FiltrosMonetarios.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(22, 10), new java.awt.Dimension(22, 10), new java.awt.Dimension(22, 10));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jLabel12 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        NumTarj = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        FechIni = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        FechFi = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        Bin = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Nit = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        SubTipo = new javax.swing.JTextField();
        button1 = new java.awt.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        entity = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();

        setMaximizable(true);
        setResizable(true);
        setPreferredSize(new java.awt.Dimension(1024, 485));

        jLabel12.setText("SELECCIONE UN TIPO DE REPORTE");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "1 - EXTRACTO TARJETA", "2 - MOVIMIENTOS TARJETAS POR EMPRESA", "3 - MOVIMIENTOS TARJETAS POR ENTIDAD", "4 - SALDO POR TARJETA", "5 - CONSULTA SALDO TARJETAS POR EMPRESA", "6 - SALDO TARJETAS POR ENTIDAD" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText(" Número de tarjeta");

        NumTarj.setEnabled(false);
        NumTarj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumTarjActionPerformed(evt);
            }
        });

        jLabel2.setText("Fecha Inicial");

        FechIni.setDateFormatString("yyyy-MM-dd");
        FechIni.setEnabled(false);

        jLabel3.setText("Fecha Final");

        FechFi.setDateFormatString("yyyy-MM-dd");
        FechFi.setEnabled(false);

        jLabel4.setText("NIT");

        Bin.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        Bin.setEnabled(false);
        Bin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BinActionPerformed(evt);
            }
        });

        jLabel5.setText("BIN");

        Nit.setEnabled(false);

        jLabel6.setText("Sub Tipo");

        SubTipo.setEnabled(false);

        button1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        button1.setLabel("Aplicar Filtro");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Información"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        entity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entityActionPerformed(evt);
            }
        });

        jLabel7.setText("Entidad");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(filler1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(Bin, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(224, 224, 224))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(NumTarj, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(21, 21, 21)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(entity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(Nit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(FechIni, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(34, 34, 34)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(SubTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(FechFi, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(130, 130, 130)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(filler3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jScrollPane1)))
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(entity)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(button1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(FechIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NumTarj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FechFi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Bin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Nit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SubTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(filler3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        String idTipoFiltroS = (String) jComboBox1.getSelectedItem();

        if ((idTipoFiltroS.equals("SELECCIONE"))) {
            button1.setEnabled(false);
            Bin.setEnabled(false);
            Nit.setEnabled(false);
            SubTipo.setEnabled(false);
            NumTarj.setEnabled(false);
            FechIni.setEnabled(false);
            FechFi.setEnabled(false);
            Bin.setBackground(new java.awt.Color(238, 235, 235));
            Nit.setBackground(new java.awt.Color(238, 235, 235));
            SubTipo.setBackground(new java.awt.Color(238, 235, 235));
            NumTarj.setBackground(new java.awt.Color(238, 235, 235));
            FechIni.setBackground(new java.awt.Color(238, 235, 235));
            FechFi.setBackground(new java.awt.Color(238, 235, 235));
        } else {
            String[] idTipoFiltroV = idTipoFiltroS.split(" - ");
            int idTipoFiltro = Integer.parseInt(idTipoFiltroV[0]);
            if (idTipoFiltro == 1) {

                NumTarj.setBackground(new java.awt.Color(255, 255, 255));
                NumTarj.setEnabled(true);
                Bin.setBackground(new java.awt.Color(238, 235, 235));
                Bin.setEnabled(false);
                FechFi.setBackground(new java.awt.Color(255, 255, 255));
                FechFi.setEnabled(true);
                FechIni.setBackground(new java.awt.Color(255, 255, 255));
                FechIni.setEnabled(true);
                Nit.setBackground(new java.awt.Color(238, 235, 235));
                Nit.setEnabled(false);
                SubTipo.setBackground(new java.awt.Color(238, 235, 235));
                SubTipo.setEnabled(false);
                button1.setEnabled(true);

            } else {
                if (idTipoFiltro == 2) {

                    NumTarj.setBackground(new java.awt.Color(238, 235, 235));
                    NumTarj.setEnabled(false);
                    Bin.setBackground(new java.awt.Color(255, 255, 255));
                    Bin.setEnabled(true);
                    FechFi.setBackground(new java.awt.Color(238, 235, 235));
                    FechFi.setEnabled(true);
                    FechIni.setBackground(new java.awt.Color(238, 235, 235));
                    FechIni.setEnabled(true);
                    Nit.setBackground(new java.awt.Color(255, 255, 255));
                    Nit.setEnabled(true);
                    SubTipo.setBackground(new java.awt.Color(255, 255, 255));
                    SubTipo.setEnabled(true);
                    button1.setEnabled(true);

                } else {
                    if (idTipoFiltro == 3) {

                        Bin.setBackground(new java.awt.Color(255, 255, 255));
                        Bin.setEnabled(true);
                        FechFi.setBackground(new java.awt.Color(255, 255, 255));
                        FechFi.setEnabled(true);
                        FechIni.setBackground(new java.awt.Color(255, 255, 255));
                        FechIni.setEnabled(true);
                        NumTarj.setBackground(new java.awt.Color(238, 235, 235));
                        NumTarj.setEnabled(false);
                        Nit.setBackground(new java.awt.Color(238, 235, 235));
                        Nit.setEnabled(false);
                        SubTipo.setBackground(new java.awt.Color(238, 235, 235));
                        SubTipo.setEnabled(false);
                        button1.setEnabled(true);

                    } else {

                        if (idTipoFiltro == 4) {

                            NumTarj.setBackground(new java.awt.Color(255, 255, 255));
                            NumTarj.setEnabled(true);
                            FechFi.setBackground(new java.awt.Color(255, 255, 255));
                            FechFi.setEnabled(true);
                            FechIni.setBackground(new java.awt.Color(255, 255, 255));
                            FechIni.setEnabled(true);
                            Bin.setBackground(new java.awt.Color(238, 235, 235));
                            Bin.setEnabled(false);
                            Nit.setBackground(new java.awt.Color(238, 235, 235));
                            Nit.setEnabled(false);
                            SubTipo.setBackground(new java.awt.Color(238, 235, 235));
                            SubTipo.setEnabled(false);
                            button1.setEnabled(true);

                        } else {
                            if (idTipoFiltro == 5) {

                                NumTarj.setBackground(new java.awt.Color(238, 235, 235));
                                NumTarj.setEnabled(false);
                                FechFi.setBackground(new java.awt.Color(255, 255, 255));
                                FechFi.setEnabled(true);
                                FechIni.setBackground(new java.awt.Color(255, 255, 255));
                                FechIni.setEnabled(true);
                                Bin.setBackground(new java.awt.Color(255, 255, 255));
                                Bin.setEnabled(true);
                                Nit.setBackground(new java.awt.Color(255, 255, 255));
                                Nit.setEnabled(true);
                                SubTipo.setBackground(new java.awt.Color(255, 255, 255));
                                SubTipo.setEnabled(true);
                                button1.setEnabled(true);

                            } else {
                                if (idTipoFiltro == 6) {

                                    NumTarj.setBackground(new java.awt.Color(255, 255, 255));
                                    NumTarj.setEnabled(true);
                                    FechFi.setBackground(new java.awt.Color(238, 235, 235));
                                    FechFi.setEnabled(false);
                                    FechIni.setBackground(new java.awt.Color(238, 235, 235));
                                    FechIni.setEnabled(false);
                                    Bin.setBackground(new java.awt.Color(255, 255, 255));
                                    Bin.setEnabled(true);
                                    Nit.setBackground(new java.awt.Color(238, 235, 235));
                                    Nit.setEnabled(false);
                                    SubTipo.setBackground(new java.awt.Color(238, 235, 235));
                                    SubTipo.setEnabled(false);
                                    button1.setEnabled(true);

                                } else {

                                }

                            }
                        }

                    }

                }

            }

        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void NumTarjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumTarjActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NumTarjActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed

        List<Movimientos> movimientos = new ArrayList<>();
        MovimientoController movimientoController = new MovimientoController();
        try {

            String idEntidadS = (String) entity.getSelectedItem();
            String[] idEntidadV = idEntidadS.split(" - ");
            String codigoBin = idEntidadV[0];

            String idTipoFiltroS = (String) jComboBox1.getSelectedItem();
            String[] idTipoFiltroV = idTipoFiltroS.split(" - ");
            int idTipoFiltro = Integer.parseInt(idTipoFiltroV[0]);

            if (idTipoFiltro == 1) {

                String formato = FechIni.getDateFormatString();
                Date date = FechIni.getDate();

                SimpleDateFormat sdf = new SimpleDateFormat(formato);
                String fechIni = String.valueOf(sdf.format(date));

                String formato2 = FechFi.getDateFormatString();
                Date date2 = FechFi.getDate();

                SimpleDateFormat sdf2 = new SimpleDateFormat(formato2);
                String fechFi = String.valueOf(sdf.format(date2));

                movimientos = movimientoController.consultaExtractoPorTarjeta(NumTarj.getText().trim(), fechIni, fechFi, codigoBin, codigoBin);

                DefaultTableModel modelo;
                modelo = new DefaultTableModel();

                jTable1.setModel(modelo);

                modelo.addColumn("Fecha Trasaccion");
                modelo.addColumn("Numero Tarjeta");
                modelo.addColumn(" Nombre TarjetaHabiente");
                modelo.addColumn("Nit Empresa");
                modelo.addColumn("Estado");
                modelo.addColumn("Saldo Estado Tarjeta ");

                for (int i = 0; i < movimientos.size(); i++) {
                    Object[] object = new Object[6];
                    object[0] = movimientos.get(i).getVarDateFechaTransac();
                    object[1] = movimientos.get(i).getVarTarjeta();
                    object[2] = movimientos.get(i).getVarNombTajHabiente();
                    object[3] = movimientos.get(i).getVarDescripEsta();
                    object[4] = movimientos.get(i).getVarDescriSubtipo();
                    object[5] = movimientos.get(i).getDecSaldoDispo();

                    modelo.addRow(object);
                }

            } else {
                if (idTipoFiltro == 2) {

                    String formato = FechIni.getDateFormatString();
                    Date date = FechIni.getDate();

                    SimpleDateFormat sdf = new SimpleDateFormat(formato);
                    String fechIni = String.valueOf(sdf.format(date));

                    String formato2 = FechFi.getDateFormatString();
                    Date date2 = FechFi.getDate();

                    SimpleDateFormat sdf2 = new SimpleDateFormat(formato2);
                    String fechFi = String.valueOf(sdf.format(date2));

                    movimientos = movimientoController.consultaSaldoTarjetasEmpresa(fechIni, fechFi,codigoBin, Nit.getText().trim(), SubTipo.getText().trim(), Bin.getText().trim(),codigoBin ,NumTarj.getText().trim());

                    DefaultTableModel modelo;
                    modelo = new DefaultTableModel();

                    jTable1.setModel(modelo);

                    modelo.addColumn("Fecha Trasaccion");
                modelo.addColumn("Numero Tarjeta");
                modelo.addColumn(" Nombre TarjetaHabiente");
                modelo.addColumn("Nit Empresa");
                modelo.addColumn("Estado");
                modelo.addColumn("Saldo Estado Tarjeta ");

                for (int i = 0; i < movimientos.size(); i++) {
                    Object[] object = new Object[6];
                    object[0] = movimientos.get(i).getVarDateFechaTransac();
                    object[1] = movimientos.get(i).getVarTarjeta();
                    object[2] = movimientos.get(i).getVarNombTajHabiente();
                    object[3] = movimientos.get(i).getVarDescripEsta();
                    object[4] = movimientos.get(i).getVarDescriSubtipo();
                    object[5] = movimientos.get(i).getDecSaldoDispo();

                        modelo.addRow(object);
                    }

                } else {
                    if (idTipoFiltro == 3) {

                        String formato = FechIni.getDateFormatString();
                        Date date = FechIni.getDate();

                        SimpleDateFormat sdf = new SimpleDateFormat(formato);
                        String fechini = String.valueOf(sdf.format(date));

                        String formato2 = FechFi.getDateFormatString();
                        Date date2 = FechFi.getDate();

                        SimpleDateFormat sdf2 = new SimpleDateFormat(formato2);
                        String fechfi = String.valueOf(sdf.format(date2));

                        movimientos = movimientoController.consultaMovimientosTarjetaEntidad(fechini,codigoBin, fechfi, Bin.getText().trim());

                        DefaultTableModel modelo;
                        modelo = new DefaultTableModel();

                        jTable1.setModel(modelo);

                        modelo.addColumn("Fecha Transaccion");
                        modelo.addColumn("Numero Tarjeta");
                        modelo.addColumn(" Estado Tarjeta");
                        modelo.addColumn(" Numero Documento");
                        modelo.addColumn("Nombre TarjetaHabiente");
                        modelo.addColumn("Tipo Transaccion");
                        modelo.addColumn("Valor Transaccion");
                        modelo.addColumn("Codigo Autorizacion ");
                        modelo.addColumn("Respuesta Autorizacion ");
                        modelo.addColumn("Valor Comision");
                        modelo.addColumn("Codigo Establecimiento");
                        modelo.addColumn("Nombre Establecimiento");
                        modelo.addColumn("Indicador Reverso");
                        modelo.addColumn("Impuesto Emergencia Economica");
                        modelo.addColumn("Subtipo ");
                        modelo.addColumn("Nit Empresa");
                        modelo.addColumn("Valor Base Iva");
                        modelo.addColumn("Nombre Red Adquiriente");
                        modelo.addColumn("Saldo");

                        for (int i = 0; i < movimientos.size(); i++) {
                            Object[] object = new Object[17];
                            object[0] = movimientos.get(i).getDateFechaTransac();
                            object[1] = movimientos.get(i).getVarTarjeta();
                            object[2] = movimientos.get(i).getVarDescripEsta();
                            object[3] = movimientos.get(i).getVarNumDocumento();
                            object[4] = movimientos.get(i).getVarNombreTarjetahabiente();
                            object[5] = movimientos.get(i).getVarDescTransac();
                            object[6] = movimientos.get(i).getDecValTransaccion();
                            object[7] = movimientos.get(i).getVarRespuAutoriz();
                            object[8] = movimientos.get(i).getDecValCarCobr();
                            object[9] = movimientos.get(i).getVarCodEstablecimiento();
                            object[10] = movimientos.get(i).getVarNombreComercio();
                            object[11] = movimientos.get(i).getVarIndicadorRever();
                            object[12] = movimientos.get(i).getDecImpEmerEcono();
                            object[13] = movimientos.get(i).getVarDescriSubtipo();
                            object[14] = movimientos.get(i).getVarNitEmpresa();
                            object[15] = movimientos.get(i).getVarRedAdquiriente();
                            object[16] = movimientos.get(i).getDecSaldoDispo();

                            modelo.addRow(object);
                        }
                    } else {
                        if (idTipoFiltro == 4) {

                            String formato = FechIni.getDateFormatString();
                            Date date = FechIni.getDate();

                            SimpleDateFormat sdf = new SimpleDateFormat(formato);
                            String fechIni = String.valueOf(sdf.format(date));

                            String formato2 = FechFi.getDateFormatString();
                            Date date2 = FechFi.getDate();

                            SimpleDateFormat sdf2 = new SimpleDateFormat(formato2);
                            String fechFi = String.valueOf(sdf.format(date2));

                            movimientos = movimientoController.consultaSaldoPorTarjeta(NumTarj.getText().trim(), fechIni, fechFi, codigoBin);

                            DefaultTableModel modelo;
                            modelo = new DefaultTableModel();

                            jTable1.setModel(modelo);

                                           modelo.addColumn("Fecha Trasaccion");
                modelo.addColumn("Numero Tarjeta");
                modelo.addColumn(" Nombre TarjetaHabiente");
                modelo.addColumn("Estado Tarjeta");
                modelo.addColumn("Suptipo");
                modelo.addColumn("Saldo Tarjeta ");

                for (int i = 0; i < movimientos.size(); i++) {
                    Object[] object = new Object[6];
                    object[0] = movimientos.get(i).getVarDateFechaTransac();
                    object[1] = movimientos.get(i).getVarTarjeta();
                    object[2] = movimientos.get(i).getVarNombTajHabiente();
                    object[3] = movimientos.get(i).getVarDescripEsta();
                    object[4] = movimientos.get(i).getVarDescriSubtipo();
                    object[5] = movimientos.get(i).getDecSaldoDispo();

                                modelo.addRow(object);
                            }

                        } else {
                            if (idTipoFiltro == 5) {

                                String formato = FechIni.getDateFormatString();
                                Date date = FechIni.getDate();

                                SimpleDateFormat sdf = new SimpleDateFormat(formato);
                                String fechIni = String.valueOf(sdf.format(date));

                                String formato2 = FechFi.getDateFormatString();
                                Date date2 = FechFi.getDate();

                                SimpleDateFormat sdf2 = new SimpleDateFormat(formato2);
                                String fechFi = String.valueOf(sdf.format(date2));

                                movimientos = movimientoController.consultaSaldoTarjetasEmpresa(fechIni, fechFi,codigoBin, Nit.getText().trim(), SubTipo.getText().trim(), Bin.getText().trim(),codigoBin ,NumTarj.getText().trim());

                                DefaultTableModel modelo;
                                modelo = new DefaultTableModel();

                                jTable1.setModel(modelo);

                                modelo.addColumn("Fecha Trasaccion");
                modelo.addColumn("Numero Tarjeta");
                modelo.addColumn(" Nombre TarjetaHabiente");
                modelo.addColumn("Estado Tarjeta");
                modelo.addColumn("Suptipo");
                modelo.addColumn("Saldo Tarjeta ");

                for (int i = 0; i < movimientos.size(); i++) {
                    Object[] object = new Object[6];
                    object[0] = movimientos.get(i).getVarDateFechaTransac();
                    object[1] = movimientos.get(i).getVarTarjeta();
                    object[2] = movimientos.get(i).getVarNombTajHabiente();
                    object[3] = movimientos.get(i).getVarDescripEsta();
                    object[4] = movimientos.get(i).getVarDescriSubtipo();
                    object[5] = movimientos.get(i).getDecSaldoDispo();

                                    modelo.addRow(object);

                                }

                            } else {
                                if (idTipoFiltro == 6) {
                                    String formato = FechIni.getDateFormatString();
                                    Date date = FechIni.getDate();

                                    SimpleDateFormat sdf = new SimpleDateFormat(formato);
                                    String fechIni = String.valueOf(sdf.format(date));

                                    String formato2 = FechFi.getDateFormatString();
                                    Date date2 = FechFi.getDate();

                                    SimpleDateFormat sdf2 = new SimpleDateFormat(formato2);
                                    String fechFi = String.valueOf(sdf.format(date2));

                                    movimientos = movimientoController.consultaSaldoTarjetaEntidad(NumTarj.getText().trim(), codigoBin,Bin.getText().trim());

                                    DefaultTableModel modelo;
                                    modelo = new DefaultTableModel();

                                    jTable1.setModel(modelo);

                                    modelo.addColumn("Fecha Trasaccion");
                modelo.addColumn("Numero Tarjeta");
                modelo.addColumn(" Nombre TarjetaHabiente");
                modelo.addColumn("Nit Empresa");
                modelo.addColumn("Estado");
                modelo.addColumn("Saldo Estado Tarjeta ");

                for (int i = 0; i < movimientos.size(); i++) {
                    Object[] object = new Object[6];
                    object[0] = movimientos.get(i).getVarDateFechaTransac();
                    object[1] = movimientos.get(i).getVarTarjeta();
                    object[2] = movimientos.get(i).getVarNombTajHabiente();
                    object[3] = movimientos.get(i).getVarDescripEsta();
                    object[4] = movimientos.get(i).getVarDescriSubtipo();
                    object[5] = movimientos.get(i).getDecSaldoDispo();

                                        modelo.addRow(object);

                                    }
                                } else {

                                }

                            }
                        }

                    }

                }

            }

        } catch (SQLException ex) {
            Logger.getLogger(FiltrosMonetarios.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_button1ActionPerformed

    private void entityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entityActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_entityActionPerformed

    private void BinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BinActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Bin;
    private com.toedter.calendar.JDateChooser FechFi;
    private com.toedter.calendar.JDateChooser FechIni;
    private javax.swing.JTextField Nit;
    private javax.swing.JTextField NumTarj;
    private javax.swing.JTextField SubTipo;
    private java.awt.Button button1;
    private javax.swing.JComboBox<String> entity;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
